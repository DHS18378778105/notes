supervisorctl tail programname stdout # 查看动态日志输出
创建配置文件
echo_supervisord_conf > /etc/supervisord.conf
# 启动supervisord
supervisord  # 使用默认的配置文件 /etc/supervisord.conf
supervisord -c /etc/supervisord.conf  # 明确指定配置文件   /etc/supervisor/upervisord.conf
supervisord -u user  # 使用user用户启动supervisord

supervisorctl update # 更新新的配置到supervisord 
supervisorctl reload # 重新启动配置中的所有程序
supervisorctl start program_name # 启动某个进程(program_name=你配置中写的程序名称)
supervisorctl # 查看正在守候的进程
supervisorctl stop program_name # 停止某一进程 (program_name=你配置中写的程序名称)
supervisorctl restart program_name # 重启某一进程 (program_name=你配置中写的程序名称)
supervisorctl stop all # 停止全部进程 注意：显示用stop停止掉的进程，用reload或者update都不会自动重启

sudo service supervisor restart  # 重启supervisor


# 关闭supervisor启动脚本
supervisorctl stop all 

# 关闭supervisord服务
ps -aux | grep supervisor
kill pid

# 读取有更新（增加）的配置文件，不会启动新添加的程序
supervisorctl reread 

# 重启配置文件修改过的程序
supervisorctl update 

# 启动 larashop-worker 程序
supervisorctl start larashop-worker:* 

# 查看状态
supervisorctl status 

配置说明
-----------------------
;*为必须填写项
;*[program:应用名称]
[program:cat]
;*命令路径,如果使用python启动的程序应该为 python /home/test.py, 
;不建议放入/home/user/, 对于非user用户一般情况下是不能访问
command=/bin/cat
;当numprocs为1时,process_name=%(program_name)s
;当numprocs>=2时,%(program_name)s_%(process_num)02d
process_name=%(program_name)s
;进程数量
numprocs=1
;执行目录,若有/home/supervisor_test/test1.py
;将directory设置成/home/supervisor_test
;则command只需设置成python test1.py
;否则command必须设置成绝对执行目录
directory=/tmp
;掩码:--- -w- -w-, 转换后rwx r-x w-x
umask=022
;优先级,值越高,最后启动,最先被关闭,默认值999
priority=999
;如果是true,当supervisor启动时,程序将会自动启动
autostart=true
;*自动重启
autorestart=true
;启动延时执行,默认1秒
startsecs=10
;启动尝试次数,默认3次
startretries=3
;当退出码是0,2时,执行重启,默认值0,2
exitcodes=0,2
;停止信号,默认TERM
;中断:INT(类似于Ctrl+C)(kill -INT pid),退出后会将写文件或日志(推荐)
;终止:TERM(kill -TERM pid)
;挂起:HUP(kill -HUP pid),注意与Ctrl+Z/kill -stop pid不同
;从容停止:QUIT(kill -QUIT pid)
;KILL, USR1, USR2其他见命令(kill -l),说明1
stopsignal=TERM
stopwaitsecs=10
;*以root用户执行
user=root
;重定向
redirect_stderr=false
stdout_logfile=/a/path
stdout_logfile_maxbytes=1MB
stdout_logfile_backups=10
stdout_capture_maxbytes=1MB
stderr_logfile=/a/path
stderr_logfile_maxbytes=1MB
stderr_logfile_backups=10
stderr_capture_maxbytes=1MB
;环境变量设置
environment=A="1",B="2"
serverurl=AUTO
---------------------